/**
 * Space between columns
 */

$grid-gutter: 20px !default;


/**
 * Max width of container
 */

$grid-max-width: 1200px + ($grid-gutter * 2) !default;


/**
 * Number of total columns
 */

$grid-columns: 12 !default;


/**
 * Breakpoints
 */

$breakpoint-sm: 768px !default;
$breakpoint-md: 992px !default;
$breakpoint-lg: 1200px !default;

$breakpoints: (
  'lg' '(min-width: ' + $breakpoint-lg + ')',
  'md' '(min-width: ' + $breakpoint-md + ') and (max-width: ' + ($breakpoint-lg - 1) + ')',
  'sm' '(min-width: ' + $breakpoint-sm + ') and (max-width:'  + ($breakpoint-md - 1) + ')',
  'xs' '(max-width: ' + ($breakpoint-sm - 1) + ')'
) !default;


/**
 * Grid loop mixin
 */

@mixin grid-loop($name){
  @for $i from 0 through $grid-columns {
    @if $i != 0 {
      .col--#{$name}-#{$i} {
        width: percentage($i/$grid-columns);
      }
    }
    .col--#{$name}-offset-#{$i} {
      margin-left: percentage($i/$grid-columns);
    }
  }
}


/**
 * Grid scaffolding
 */

.container {
  max-width: $grid-max-width;
  margin: 0 auto;
  padding: 0 $grid-gutter;
}

.row {
  list-style: none;
  margin-left: -$grid-gutter;
  &:before,
  &:after {
    content: '';
    display: table;
    line-height: 0;
  }
  &:after {
    clear: both;
  }
}

.col {
  float: left;
  padding-left: $grid-gutter;
  -webkit-box-sizing: border-box;
     -moz-box-sizing: border-box;
          box-sizing: border-box;
}


/**
 * Columns generator
 */

@each $breakpoint in $breakpoints {

  $name: nth($breakpoint, 1);
  $declaration: nth($breakpoint, 2);

  @if $name == ld {
    @include grid-loop($name);
  }
  
  @else {
    @media only screen and #{$declaration} {
      @include grid-loop($name);
    }
  } 

}
